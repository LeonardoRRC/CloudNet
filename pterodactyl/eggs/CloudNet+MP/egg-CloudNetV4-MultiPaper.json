{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-01-16T19:03:56+00:00",
    "name": "CloudNetV4+MultiPaper",
    "author": "mail@burgerbringtsaft.de",
    "description": "Combinde the CloudNet functionally with the performance and scalablity of MultiPaper.\r\nGitHub-Install: https:\/\/github.com\/Lostes-Burger\/Docker\/tree\/main\/pterodactyl\/eggs\/CloudNet%2BMP\r\nMultiPaper: https:\/\/multipaper.io\/\r\nCloudNet: https:\/\/github.com\/CloudNetService\/CloudNet\r\n\r\nEgg made by @lostesburger",
    "features": null,
    "docker_images": {
        "CloudNet+MP v4": "lostesburger\/cloudnet-mp:latest"
    },
    "file_denylist": [],
    "startup": "java {{JAVA_OPT}} -Xmx456M -Xms256m -jar launcher.jar",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Startup done,\",\r\n    \"userInteraction\": [\r\n        \"Do you agree to the Mojang EULA (https:\/\/account.mojang.com\/documents\/minecraft_eula)\"\r\n    ]\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/ash\r\n# Cloudnet Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\ncd \/mnt\/server\r\nCLOUDNET_VERSION=\"$(echo \"$CLOUDNET_VERSION\" | tr -d ' ')\"\r\nCYAN='\\033[0;36m'\r\nRESET_COLOR='\\033[0m'\r\nRED=\"\\033[0;31m\"\r\nRED_BIG=\"\\033[1;31m\"\r\nGREEN=\"\\033[0;32m\"\r\nGREEN_BIG=\"\\033[1;32m\"\r\n\r\nif [ ! -z \"${CLOUDNET_VERSION}\" ]; then\r\n    DOWNLOAD_LINK=\"https:\/\/github.com\/CloudNetService\/CloudNet-v3\/releases\/download\/4.0.0-RC${CLOUDNET_VERSION}\/CloudNet.zip\"\r\nfi\r\necho -e \"Downloading CloudNet version ${CLOUDNET_VERSION}\"\r\necho -e \"Download link is ${DOWNLOAD_LINK}\"\r\n\r\nif [ ! -z \"${DOWNLOAD_LINK}\" ]; then\r\n  if curl --output \/dev\/null --silent --head --fail ${DOWNLOAD_LINK}; then\r\n    echo -e \"zip download link is valid.\"\r\n  else\r\n    echo -e \"link is invalid. Exiting now\"\r\n    exit 2\r\n  fi\r\nelse\r\n  echo -e \"no download link provided. Exiting now\"\r\n  exit 3\r\nfi\r\n\r\necho -e \"Download CloudNet zip.\\n\"\r\ncurl -sSL ${DOWNLOAD_LINK} -o CloudNet.zip\r\n\r\necho -e \"Install CloudNet server.\\n\"\r\nunzip -o CloudNet.zip || { echo -e \"${RED_BIG}Install failed using Cloudnet version ${CLOUDNET_VERSION}.\"; exit 4; }\r\n\r\necho -e \"Deleting CloudNet.zip file.\\n\"\r\nrm -rf CloudNet.zip\r\n\r\nif [ ! -e \"\/config.json\" ]; then\r\n    echo -e \"config.json not found!\\n\"\r\n    touch config.json\r\nfi\r\n\r\nmkdir master\/\r\ncd master\/\r\n\r\nif [ ! -z \"${LINK_MP_MASTER}\" ]; then\r\n  if curl --output \/dev\/null --silent --head --fail ${LINK_MP_MASTER}; then\r\n    echo -e \"MultiPaper Master URL is valid\"\r\n  else\r\n    echo -e \"link is invalid. Exiting now\"\r\n    exit 2\r\n  fi\r\nelse\r\n  echo -e \"no download link provided. Exiting now\"\r\n  exit 3\r\nfi\r\n\r\necho -e \"Downloading MultiPaper Master...\\n\"\r\ncurl -sSL ${LINK_MP_MASTER} -o MP-Master.jar\r\n\r\ncd ..\r\nmkdir multipaper\/\r\ncd multipaper\/\r\nif [ ! -z \"${URL_MP}\" ]; then\r\n  if curl --output \/dev\/null --silent --head --fail ${URL_MP}; then\r\n    echo -e \"MultiPaper URL is valid\"\r\n  else\r\n    echo -e \"${RED_BIG}link is invalid. Exiting now\"\r\n    exit 2\r\n  fi\r\nelse\r\n  echo -e \"${RED_BIG}no download link provided. Exiting now\"\r\n  exit 3\r\nfi\r\n\r\necho -e \"${CYAN}Downloading MultiPaper ...\\n\"\r\ncurl -sSL ${URL_MP} -o paper.jar\r\n\r\nfilename=\"MultiPaper Info.txt\"\r\ncat <<EOF > \"$filename\"\r\nThis File was generated by the Install Script.\r\n\r\nThe setup copies the MultiPaper server file which was renamed to paper.jar in the correct Template directory. (\/local\/templates\/Server\/default)\r\n\r\nAll the servers Files (map and playerdata) will be saved in the \/master directory.\r\n\r\nThe Services are static:false for a reason. The Services are not supposed to keep any duplicate data of old chunkes to prevent corruption of chunks and item duplication.\r\n\r\nAfter the Installation follow the guide on my github (https:\/\/github.com\/Lostes-Burger\/Docker\/tree\/main\/pterodactyl\/eggs\/CloudNet%2BMP#setup-cloudnet) to create a Proxy and install the required Modules and configuration.\r\n\r\nReport any bugs with the installation to my github: https:\/\/github.com\/Lostes-Burger\/Docker\/tree\/main\/pterodactyl\/eggs\/CloudNet%2BMP\r\nReport any MultiPaper bugs to their github: https:\/\/github.com\/MultiPaper\/MultiPaper\r\nReport any CloudNet bugs to their github: https:\/\/github.com\/CloudNetService\/CloudNet\r\nEOF\r\ncd ..\r\necho -e \"${CYAN} Der MultiPaper Task wird nun erstellt...\"\r\n\r\nmkdir -p .\/local\/templates\/Server\/default\r\n\r\nSOURCE_FILE=\".\/multipaper\/paper.jar\"\r\nTARGET_DIR=\".\/local\/templates\/Server\/default\"\r\nTASK_DIR=\".\/local\/tasks\"\r\n\r\nif [ -f \"$SOURCE_FILE\" ]; then\r\n    mkdir -p \"$TARGET_DIR\"\r\n    cp \"$SOURCE_FILE\" \"$TARGET_DIR\"\r\n    echo -e \"${GREEN}File 'paper.jar' was copied to '$TARGET_DIR'\"\r\nfi\r\n\r\nSPIGOT_YML=\"$TARGET_DIR\/spigot.yml\"\r\n\r\ncat > \"$SPIGOT_YML\" <<EOL\r\nsettings:\r\n  bungeecord: true\r\nEOL\r\necho -e \"${GREEN}File 'spigot.yml' got created in '$TARGET_DIR'\"\r\n\r\nmkdir -p \"$TASK_DIR\"\r\nSERVER_JSON=\"$TASK_DIR\/Server.json\"\r\n\r\ncat > \"$SERVER_JSON\" <<EOL\r\n{\r\n  \"name\": \"Server\",\r\n  \"runtime\": \"jvm\",\r\n  \"hostAddress\": null,\r\n  \"javaCommand\": \"java\",\r\n  \"nameSplitter\": \"-\",\r\n  \"disableIpRewrite\": false,\r\n  \"maintenance\": false,\r\n  \"autoDeleteOnStop\": true,\r\n  \"staticServices\": false,\r\n  \"groups\": [\r\n    \"Server\"\r\n  ],\r\n  \"associatedNodes\": [],\r\n  \"deletedFilesAfterStop\": [],\r\n  \"processConfiguration\": {\r\n    \"environment\": \"MINECRAFT_SERVER\",\r\n    \"maxHeapMemorySize\": $MP_MAX_HEAP_MEMORY,\r\n    \"jvmOptions\": [],\r\n    \"processParameters\": [],\r\n    \"environmentVariables\": {}\r\n  },\r\n  \"startPort\": $MP_PORT,\r\n  \"minServiceCount\": $MP_SERVICE_COUNT,\r\n  \"templates\": [\r\n    {\r\n      \"prefix\": \"Server\",\r\n      \"name\": \"default\",\r\n      \"storage\": \"local\",\r\n      \"priority\": 0,\r\n      \"alwaysCopyToStaticServices\": false\r\n    }\r\n  ],\r\n  \"deployments\": [],\r\n  \"includes\": [],\r\n  \"properties\": {\r\n    \"requiredPermission\": null\r\n  }\r\n}\r\nEOL\r\n\r\nif [ -f \"$SERVER_JSON\" ]; then\r\n    echo -e \"${GREEN}File 'Server.json' was successfully created at '$SERVER_JSON'.${RESET_COLOR}\"\r\nelse\r\n    echo -e \"${RED}Failed to create 'Server.json' at '$SERVER_JSON'.${RESET_COLOR}\"\r\nfi\r\n\r\necho -e \"Installation process is completed\"\r\necho -e \" \"\r\necho -e \"\\e[31mPlease follow the setup tutorial in my github\\e[0m\"\r\necho -e \"\\e[32mhttps:\/\/github.com\/Lostes-Burger\/Docker\/tree\/main\/pterodactyl\/eggs\/CloudNet%2BMP#setup-cloudnet \\e[0m\"",
            "container": "ghcr.io\/pterodactyl\/installers:alpine",
            "entrypoint": "ash"
        }
    },
    "variables": [
        {
            "name": "Cloudnet Version",
            "description": "The version of Cloudnet to download and use (11 or newer required). Get newest version here: https:\/\/github.com\/CloudNetService\/CloudNet\/releases",
            "env_variable": "CLOUDNET_VERSION",
            "default_value": "11.2",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|between:1,99",
            "field_type": "text"
        },
        {
            "name": "Java start parameter",
            "description": "Additional Java options use below for optimal results when running CloudNet",
            "env_variable": "JAVA_OPT",
            "default_value": "-XX:+UseZGC -XX:+PerfDisableSharedMem -XX:+DisableExplicitGC",
            "user_viewable": true,
            "user_editable": true,
            "rules": "string|nullable",
            "field_type": "text"
        },
        {
            "name": "Cloudnet Port",
            "description": "On which port should CloudNet run on.",
            "env_variable": "CLOUDNET_PORT",
            "default_value": "1410",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|alpha_num",
            "field_type": "text"
        },
        {
            "name": "CloudNet's WebServer Port",
            "description": "On which port should CloudNet's WebServer run on",
            "env_variable": "CLOUDNET_WEBSERVER",
            "default_value": "2812",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|alpha_num",
            "field_type": "text"
        },
        {
            "name": "MultiPaper Master URL",
            "description": "Copy latest version of MultiPaper Master at:\r\nhttps:\/\/multipaper.io\/download.html",
            "env_variable": "LINK_MP_MASTER",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|active_url",
            "field_type": "text"
        },
        {
            "name": "MultiPaper URL",
            "description": "Copy latest version of MultiPaper at:\r\nhttps:\/\/multipaper.io\/download.html",
            "env_variable": "URL_MP",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|active_url",
            "field_type": "text"
        },
        {
            "name": "MultiPaper Service Memory",
            "description": "Set the Memory for each Multi Paper instance. This will only be set on installation.",
            "env_variable": "MP_MAX_HEAP_MEMORY",
            "default_value": "2000",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer|min:1500",
            "field_type": "text"
        },
        {
            "name": "MultiPaper Start Port",
            "description": "Start Port of the MultiPaper instances. Default is set to 25000. This will only be set on installation.",
            "env_variable": "MP_PORT",
            "default_value": "25000",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer|max:65000",
            "field_type": "text"
        },
        {
            "name": "Multi Paper Service Count",
            "description": "Set how many Services should be created as default. This value is set only on creation, if you want to change it after use the command \"tasks task Server set minServiceCount {count}\"",
            "env_variable": "MP_SERVICE_COUNT",
            "default_value": "2",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|integer|max:100",
            "field_type": "text"
        }
    ]
}